# U-050/VAOP code with APT

# VA-script
actions = {
    "Action_000":{
        "_agent_position":{
            "en-US":"In Init block of VA-box",
            "ru-RU":"В блоке Init VA-box"
        },
        "_action_description":{
            "_010":"--> init action",
            "_020":"--> Set array M, i = -1; sum_01 = 0; flag_01 = 0" 
        },
        "Direction_10":"Action_300",  "_010":"Done"
    },
"Action_010":{
        "_agent_position":{
            "en-US":"Checking -> Is the end of array or the first element of range or not?",
            "ru-RU":"Проверка -> Это конец массива или первый элемент диапазона или нет?"
        },
        "_action_description":{
            "_010":"--> i = i + 1",
            "_015":"--> i_main += i",
            "_020":"--> flag_01 = flag_01 + 1",
            "_030":"--> Get element from array"
        },
        "Direction_10":"Action_END", "_010":"The end of array",
        "Direction_20":"Action_020",  "_020":"The first element of the range",
        "Direction_30":"Action_040",  "_030":"Not the first element of the range"
    },
"Action_020":{
        "_agent_position":{
            "en-US":"The first element of the range || Checking -> Is the integer number or the real or equal 7 or or equal 777",
            "ru-RU":"Первый элемент диапазона || Проверка -> Целое число или действительное, равно 7 или равно 777"
        },
        "_action_description":{
            "_010":"First element of the range || Checking -> Is the integer number or the real or equal 7 or or equal 777"
        },
        "Direction_10":"Action_030",  "_010":"The first element of the range is integer number",
        "Direction_20":"Action_010",  "_020":"The first element of the range is real number",
        "Direction_30":"Action_330",  "_030":"The first element of range is equal to 7",
        "Direction_40":"Action_300",  "_040":"The first element of range is equal to 777"
    },
"Action_030":{
        "_agent_position":{
            "en-US":"The first element of the range ||The first element of range is integer number | Append the first element of range to range_list",
            "ru-RU":"Первый элемент диапазона || Первый элемент диапазона - целое число | Добавить первый элемент диапазона в range_list"
        },
        "_action_description":{
            "_010":"--> The first element of range is integer number",
            "_020":"--> Append the first element of range to range_list"
        },
        "Direction_10":"Action_010", "_010":"Done"
    },
"Action_040":{
        "_agent_position":{
            "en-US":"Not the first element of the range || Checking -> Is the integer number or the real or equal 7 or or equal 777",
            "ru-RU":"Не первый элемент диапазона || Проверка -> Целое число, или действительное, или равное 7, или равное 777"
        },
        "_action_description":{
            "_010":"Not the first element of the range"
        },
        "Direction_10":"Action_050",  "_010":"Not the first element of the range is integer number",
        "Direction_20":"Action_010",  "_020":"Not the first element of the range is real number",
        "Direction_30":"Action_330",  "_030":"Not the first element of range is equal to 7",
        "Direction_40":"Action_350",  "_040":"Not the first element of range is equal to 777"
    },
"Action_050":{
        "_agent_position":{
            "en-US":"Not the first element of the range || Checking -> If this element the therd element of rande after last added  -> range_list.append(M[i_main])",
            "ru-RU":"Не первый элемент диапазона || Проверка -> Если этот элемент является третьим элементом диапазона после последнего добавления -> range_list.append (M [i_main])"
        },
        "_action_description":{
            "_010":"--> Element is integer number"
        },
        "Direction_10":"Action_010", "_010":"Done"
    },
"Action_300":{
        "_agent_position":{
            "en-US":"Scanning the array || Looking for 777 as the start of range",
            "ru-RU":"Сканирование массива || поиск 777 в качестве начала диапазона"
        },
        "_action_description":{
            "_010":"--> i_main = i_main + 1",
            "_020":"--> i = 0",
            "_030":"--> Get element from array"
        },
        "Direction_10":"Action_END", "_010":"The end of array",
        "Direction_20":"Action_310",  "_020":"The element is equal 777",
        "Direction_30":"Action_300",  "_030":"The element is not equal 777"
    },
"Action_310":{
        "_agent_position":{
            "en-US":"Scanning the array || Found 777 as start of the new range",
            "ru-RU":"Сканирование массива || Найдено 777 как начало нового диапазона"
        },
        "_action_description":{
            "_010":"--> i = 0",
            "_010":"--> flag_01 = 0"
        },
        "Direction_10":"Action_010", "_010":"Done"
    },
"Action_330":{
        "_agent_position":{
            "en-US":"Just after found 7 in range, va-egent are checking element following 7",
            "ru-RU":"Сразу после того, как найдено 7 в диапазоне, v-agent проверяет элемент, следующий за 7"
        },
        "_action_description":{
            "_010":"--> i_main = i_main + 1",
            "_020":"--> Get element from array"
        },
        "Direction_10":"Action_END", "_010":"Array is empty or the end of array",
        "Direction_20":"Action_350",  "_020":"Element equal 777",
        "Direction_30":"Action_340",  "_030":"Element not equal 777"
    },
"Action_340":{
        "_agent_position":{
            "en-US":"After found 7 in range start skipping elements till meet 777 or the end off array",
            "ru-RU":"После того, как найдено 7 в диапазоне, начните пропускать элементы до встречи 777 или до конца массива"
        },
        "_action_description":{
            "_010":"--> i_main = i_main + 1",
            "_020":"--> Get element from array"
        },
        "Direction_10":"Action_END", "_010":"Array is empty or the end of array",
        "Direction_20":"Action_345",  "_020":"Element equal 777",
        "Direction_30":"Action_340",  "_030":"Element not equal 777"
    },
"Action_345":{
        "_agent_position":{
            "en-US":"v-agent found 777 as end of range not just after 7",
            "ru-RU":"v-agent обнаружил, что 777 - это конец диапазона не сразу после 7"
        },
        "_action_description":{
            "_010":"--> total_number_of_ranges_from_777_to_777_with_7 += 1"
        },
        "Direction_10":"Action_350",  "_010":"Done"
    },
"Action_350":{
        "_agent_position":{
            "en-US":"After found 777 as end of range | sum_01 = sum_01 + sum(range_list)",
            "ru-RU":"После того, как найдено 777 как конец диапазона | sum_01 = sum_01 + sum(range_list)"
        },
        "_action_description":{
            "_010":"--> sum_01 = sum_01 + sum(range_list)",
            "_020":"--> range_list = []"
        },
        "Direction_10":"Action_300", "_010":"Done"
    }
}

def getAgentPosition(locale_lang_code, action):
  locale_lang_code_defaulf = 'en-US'
  agent_position = "Now in [" + action + "]"
  if '_agent_position' in actions[action]:
    if locale_lang_code in actions[action]['_agent_position']:
      agent_position = actions[action]['_agent_position'][locale_lang_code]
      if agent_position == '':
        if locale_lang_code_defaulf in actions[action]['_agent_position']:
          agent_position = actions[action]['_agent_position'][locale_lang_code_defaulf]
    if locale_lang_code not in actions[action]['_agent_position']:
      if locale_lang_code_defaulf in actions[action]['_agent_position']:
        agent_position = actions[action]['_agent_position'][locale_lang_code_defaulf]
  
  return agent_position


# init block

#M = [777, 1, 2, 3, 4, 5, 6, 8,777]
M = [1.4, 777, 2, 4.3, 7, 8, 777, 777, 5, 6.5, 777, 3]
M = [777,2,1,6,5,777]
M = [777,5,1,6,5,2,1,5,3,777]
M = [2,3,4,777, 777, 2]
M = [1.4, 777, 5, 4.3, 7, 8, 777, 9,23, 777, 5, 6.5, 777, 3, 777, 5, 6.5, 777] 
#M = [1.4, 777, 5, 4.3, 7, 777, 9,23, 777, 5, 6.5, 777, 3, 777, 5, 6.5, 777]

#########
locale_lang_code_defaulf = 'en-US'
#########
locale_lang_code = 'en-US'
#locale_lang_code = 'ru-RU'
#########
sum_01 = 0
i = 0 # by sublist
i_main = -1 # by all array
flag_01 = -1
range_list = []
current_element = 'foo'

total_number_of_ranges_from_777_to_777 = 0
total_number_of_ranges_from_777_to_777_with_7 = 0

current_action = "Action_000"
direction = "Direction_10"

print("M = ", M)
print("current_action | direction | i_main | i | flag_01 | current_element | sum_01 | range_list | agent_position")


while 1 == 1:
  # define next action
  action = actions[current_action][direction]
  previous_action = current_action
  current_action = action  

  agent_position = getAgentPosition(locale_lang_code, previous_action)

  print(previous_action, "|",direction, "|", i_main, "|", i, "|", flag_01, "|", current_element,
        "|", sum_01, "|",  range_list, "|", agent_position)


  if current_action in actions:
    ### Action_010 ##################################
    if current_action == "Action_010":
      i += 1 
      i_main += 1
      flag_01 += 1
      if i_main > len(M) - 1:
          direction = "Direction_10" # The end of array
      if i_main <= len(M) - 1:
          current_element = M[i_main]
          if i_main <= len(M) - 1:
            if i == 1:
              direction = "Direction_20" # First element of range
            if i != 1:
              direction = "Direction_30" # Not first element of range
    ### Action_020 ##################################
    if current_action == "Action_020":
      current_element = M[i_main]
      if int(M[i_main]) == M[i_main]:
        direction = "Direction_10"
      if int(M[i_main]) != M[i_main]:
        direction = "Direction_20"
      if M[i_main] == 7:
        direction = "Direction_30"
      if M[i_main] == 777:
        direction = "Direction_40"
    ### Action_030 ##################################
    if current_action == "Action_030":
      current_element = M[i_main]
      range_list.append(M[i_main])
      flag_01 = 0
      direction = "Direction_10"
    ### Action_040 ##################################
    if current_action == "Action_040":
      current_element = M[i_main]
      if int(M[i_main]) == M[i_main]:
        direction = "Direction_10"
      if int(M[i_main]) != M[i_main]:
        direction = "Direction_20"
      if M[i_main] == 7:
        direction = "Direction_30"
      if M[i_main] == 777:
        direction = "Direction_40"
    ### Action_050 ##################################
    if current_action == "Action_050":
      current_element = M[i_main]
      if flag_01 == 3:
        range_list.append(M[i_main])
        flag_01 = 0
      direction = "Direction_10"
    ### Action_300 ##################################
    if current_action == "Action_300":
      i_main += 1 
      if i_main > len(M) - 1:
          direction = "Direction_10" # Array is empty or the end of array
      if i_main <= len(M) - 1:
        current_element = M[i_main]
        if M[i_main] == 777:
          direction = "Direction_20" # Element equal 777
        if M[i_main] != 777:
          direction = "Direction_30" # Element not equal 777        
    ### Action_310 ##################################
    if current_action == "Action_310":
      current_element = M[i_main]
      i = 0
      flag_01 = 0
      direction = "Direction_10" # Done    
    ### Action_330 ##################################
    if current_action == "Action_330":
      i_main += 1 
      current_element = M[i_main]
      if i_main > len(M) - 1:
          direction = "Direction_10" # Array is empty or the end of array
      if i_main <= len(M) - 1:
        if M[i_main] == 777:
          direction = "Direction_20" # Element equal 777
        if M[i_main] != 777:
          direction = "Direction_30" # Element not equal 777  
    ### Action_340 ##################################
    if current_action == "Action_340":
      i_main += 1 
      current_element = M[i_main]
      if i_main > len(M) - 1:
          direction = "Direction_10" # Array is empty or the end of array
      if i_main <= len(M) - 1:
        if M[i_main] == 777:
          direction = "Direction_20" # Element equal 777
        if M[i_main] != 777:
          direction = "Direction_30" # Element not equal 777  
    ### Action_345 ##################################
    if current_action == "Action_345":
      current_element = M[i_main]
      total_number_of_ranges_from_777_to_777_with_7 += 1    
      direction = "Direction_10" 
    ### Action_350 ##################################
    if current_action == "Action_350":
      current_element = M[i_main]
      sum_01 = sum_01 + sum(range_list)
      range_list = []  
      total_number_of_ranges_from_777_to_777 += 1
      direction = "Direction_10" 
    continue
  break # end of loop where 1 == 1

if current_action.find("END") == -1:
       print("\n------->Error: current_action:[" + current_action + "]\n")
if current_action.find("END") != -1:
    print("Final action was:["+ current_action + "] after [" + previous_action + "]")
    print("\nSum is [" + str(sum_01) + ']')
    print("\ntotal_number_of_ranges_from_777_to_777 is [" + str(total_number_of_ranges_from_777_to_777) + ']')
    print("\ntotal_number_of_ranges_from_777_to_777_with_7 is [" + str(total_number_of_ranges_from_777_to_777_with_7) + ']')
    print('\nThe End')
